{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultTheme\", \"withTheme\", \"name\"],\n      _excluded2 = [\"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { getDisplayName } from '@mui/utils';\nimport makeStyles from '../makeStyles';\nimport getThemeProps from '../getThemeProps';\nimport useTheme from '../useTheme'; // Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst withStyles = function (stylesOrCreator) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Component => {\n    const {\n      defaultTheme,\n      withTheme = false,\n      name\n    } = options,\n          stylesOptions = _objectWithoutPropertiesLoose(options, _excluded);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (Component === undefined) {\n        throw new Error(['You are calling withStyles(styles)(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n      }\n    }\n\n    let classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        const displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    const useStyles = makeStyles(stylesOrCreator, _extends({\n      defaultTheme,\n      Component,\n      name: name || Component.displayName,\n      classNamePrefix\n    }, stylesOptions));\n    const WithStyles = /*#__PURE__*/React.forwardRef(function WithStyles(props, ref) {\n      const other = _objectWithoutPropertiesLoose(props, _excluded2); // The wrapper receives only user supplied props, which could be a subset of\n      // the actual props Component might receive due to merging with defaultProps.\n      // So copying it here would give us the same result in the wrapper as well.\n\n\n      const classes = useStyles(_extends({}, Component.defaultProps, props));\n      let theme;\n      let more = other;\n\n      if (typeof name === 'string' || withTheme) {\n        // name and withTheme are invariant in the outer scope\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        theme = useTheme() || defaultTheme;\n\n        if (name) {\n          more = getThemeProps({\n            theme,\n            name,\n            props: other\n          });\n        } // Provide the theme to the wrapped component.\n        // So we don't have to use the `withTheme()` Higher-order Component.\n\n\n        if (withTheme && !more.theme) {\n          more.theme = theme;\n        }\n      }\n\n      return /*#__PURE__*/_jsx(Component, _extends({\n        ref: ref,\n        classes: classes\n      }, more));\n    });\n    process.env.NODE_ENV !== \"production\" ? WithStyles.propTypes = {\n      /**\r\n       * Override or extend the styles applied to the component.\r\n       */\n      classes: PropTypes.object\n    } : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      WithStyles.displayName = `WithStyles(${getDisplayName(Component)})`;\n    }\n\n    hoistNonReactStatics(WithStyles, Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Exposed for test purposes.\n      WithStyles.Naked = Component;\n      WithStyles.options = options;\n      WithStyles.useStyles = useStyles;\n    }\n\n    return WithStyles;\n  };\n};\n\nexport default withStyles;","map":{"version":3,"sources":["C:/Users/PabloMachado/Desktop/brc/dlsc/node_modules/@mui/styles/withStyles/withStyles.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","PropTypes","hoistNonReactStatics","getDisplayName","makeStyles","getThemeProps","useTheme","jsx","_jsx","withStyles","stylesOrCreator","options","Component","defaultTheme","withTheme","name","stylesOptions","process","env","NODE_ENV","undefined","Error","join","classNamePrefix","displayName","useStyles","WithStyles","forwardRef","props","ref","other","classes","defaultProps","theme","more","propTypes","object","Naked"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,cAAD,EAAiB,WAAjB,EAA8B,MAA9B,CAAlB;AAAA,MACMC,UAAU,GAAG,CAAC,SAAD,CADnB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CAAoC;AACpC;AACA;;AAEA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,MAAMC,UAAU,GAAG,UAACC,eAAD;AAAA,MAAkBC,OAAlB,uEAA4B,EAA5B;AAAA,SAAmCC,SAAS,IAAI;AACjE,UAAM;AACJC,MAAAA,YADI;AAEJC,MAAAA,SAAS,GAAG,KAFR;AAGJC,MAAAA;AAHI,QAIFJ,OAJJ;AAAA,UAKMK,aAAa,GAAGnB,6BAA6B,CAACc,OAAD,EAAUb,SAAV,CALnD;;AAOA,QAAImB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAIP,SAAS,KAAKQ,SAAlB,EAA6B;AAC3B,cAAM,IAAIC,KAAJ,CAAU,CAAC,4EAAD,EAA+E,sCAA/E,EAAuHC,IAAvH,CAA4H,IAA5H,CAAV,CAAN;AACD;AACF;;AAED,QAAIC,eAAe,GAAGR,IAAtB;;AAEA,QAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,CAACJ,IAAL,EAAW;AACT;AACA,cAAMS,WAAW,GAAGrB,cAAc,CAACS,SAAD,CAAlC;;AAEA,YAAIY,WAAW,KAAKJ,SAApB,EAA+B;AAC7BG,UAAAA,eAAe,GAAGC,WAAlB;AACD;AACF;AACF;;AAED,UAAMC,SAAS,GAAGrB,UAAU,CAACM,eAAD,EAAkBd,QAAQ,CAAC;AACrDiB,MAAAA,YADqD;AAErDD,MAAAA,SAFqD;AAGrDG,MAAAA,IAAI,EAAEA,IAAI,IAAIH,SAAS,CAACY,WAH6B;AAIrDD,MAAAA;AAJqD,KAAD,EAKnDP,aALmD,CAA1B,CAA5B;AAMA,UAAMU,UAAU,GAAG,aAAa1B,KAAK,CAAC2B,UAAN,CAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAC/E,YAAMC,KAAK,GAAGjC,6BAA6B,CAAC+B,KAAD,EAAQ7B,UAAR,CAA3C,CAD+E,CACf;AAChE;AACA;;;AAGA,YAAMgC,OAAO,GAAGN,SAAS,CAAC7B,QAAQ,CAAC,EAAD,EAAKgB,SAAS,CAACoB,YAAf,EAA6BJ,KAA7B,CAAT,CAAzB;AACA,UAAIK,KAAJ;AACA,UAAIC,IAAI,GAAGJ,KAAX;;AAEA,UAAI,OAAOf,IAAP,KAAgB,QAAhB,IAA4BD,SAAhC,EAA2C;AACzC;AACA;AACAmB,QAAAA,KAAK,GAAG3B,QAAQ,MAAMO,YAAtB;;AAEA,YAAIE,IAAJ,EAAU;AACRmB,UAAAA,IAAI,GAAG7B,aAAa,CAAC;AACnB4B,YAAAA,KADmB;AAEnBlB,YAAAA,IAFmB;AAGnBa,YAAAA,KAAK,EAAEE;AAHY,WAAD,CAApB;AAKD,SAXwC,CAWvC;AACF;;;AAGA,YAAIhB,SAAS,IAAI,CAACoB,IAAI,CAACD,KAAvB,EAA8B;AAC5BC,UAAAA,IAAI,CAACD,KAAL,GAAaA,KAAb;AACD;AACF;;AAED,aAAO,aAAazB,IAAI,CAACI,SAAD,EAAYhB,QAAQ,CAAC;AAC3CiC,QAAAA,GAAG,EAAEA,GADsC;AAE3CE,QAAAA,OAAO,EAAEA;AAFkC,OAAD,EAGzCG,IAHyC,CAApB,CAAxB;AAID,KAlC+B,CAAhC;AAmCAjB,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCO,UAAU,CAACS,SAAX,GAAuB;AAC7D;AACJ;AACA;AACIJ,MAAAA,OAAO,EAAE9B,SAAS,CAACmC;AAJ0C,KAA/D,GAKI,KAAK,CALT;;AAOA,QAAInB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCO,MAAAA,UAAU,CAACF,WAAX,GAA0B,cAAarB,cAAc,CAACS,SAAD,CAAY,GAAjE;AACD;;AAEDV,IAAAA,oBAAoB,CAACwB,UAAD,EAAad,SAAb,CAApB;;AAEA,QAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAO,MAAAA,UAAU,CAACW,KAAX,GAAmBzB,SAAnB;AACAc,MAAAA,UAAU,CAACf,OAAX,GAAqBA,OAArB;AACAe,MAAAA,UAAU,CAACD,SAAX,GAAuBA,SAAvB;AACD;;AAED,WAAOC,UAAP;AACD,GAzFkB;AAAA,CAAnB;;AA2FA,eAAejB,UAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"defaultTheme\", \"withTheme\", \"name\"],\r\n      _excluded2 = [\"classes\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { getDisplayName } from '@mui/utils';\r\nimport makeStyles from '../makeStyles';\r\nimport getThemeProps from '../getThemeProps';\r\nimport useTheme from '../useTheme'; // Link a style sheet with a component.\r\n// It does not modify the component passed to it;\r\n// instead, it returns a new component, with a `classes` property.\r\n\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nconst withStyles = (stylesOrCreator, options = {}) => Component => {\r\n  const {\r\n    defaultTheme,\r\n    withTheme = false,\r\n    name\r\n  } = options,\r\n        stylesOptions = _objectWithoutPropertiesLoose(options, _excluded);\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (Component === undefined) {\r\n      throw new Error(['You are calling withStyles(styles)(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\r\n    }\r\n  }\r\n\r\n  let classNamePrefix = name;\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!name) {\r\n      // Provide a better DX outside production.\r\n      const displayName = getDisplayName(Component);\r\n\r\n      if (displayName !== undefined) {\r\n        classNamePrefix = displayName;\r\n      }\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles(stylesOrCreator, _extends({\r\n    defaultTheme,\r\n    Component,\r\n    name: name || Component.displayName,\r\n    classNamePrefix\r\n  }, stylesOptions));\r\n  const WithStyles = /*#__PURE__*/React.forwardRef(function WithStyles(props, ref) {\r\n    const other = _objectWithoutPropertiesLoose(props, _excluded2); // The wrapper receives only user supplied props, which could be a subset of\r\n    // the actual props Component might receive due to merging with defaultProps.\r\n    // So copying it here would give us the same result in the wrapper as well.\r\n\r\n\r\n    const classes = useStyles(_extends({}, Component.defaultProps, props));\r\n    let theme;\r\n    let more = other;\r\n\r\n    if (typeof name === 'string' || withTheme) {\r\n      // name and withTheme are invariant in the outer scope\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      theme = useTheme() || defaultTheme;\r\n\r\n      if (name) {\r\n        more = getThemeProps({\r\n          theme,\r\n          name,\r\n          props: other\r\n        });\r\n      } // Provide the theme to the wrapped component.\r\n      // So we don't have to use the `withTheme()` Higher-order Component.\r\n\r\n\r\n      if (withTheme && !more.theme) {\r\n        more.theme = theme;\r\n      }\r\n    }\r\n\r\n    return /*#__PURE__*/_jsx(Component, _extends({\r\n      ref: ref,\r\n      classes: classes\r\n    }, more));\r\n  });\r\n  process.env.NODE_ENV !== \"production\" ? WithStyles.propTypes = {\r\n    /**\r\n     * Override or extend the styles applied to the component.\r\n     */\r\n    classes: PropTypes.object\r\n  } : void 0;\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    WithStyles.displayName = `WithStyles(${getDisplayName(Component)})`;\r\n  }\r\n\r\n  hoistNonReactStatics(WithStyles, Component);\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // Exposed for test purposes.\r\n    WithStyles.Naked = Component;\r\n    WithStyles.options = options;\r\n    WithStyles.useStyles = useStyles;\r\n  }\r\n\r\n  return WithStyles;\r\n};\r\n\r\nexport default withStyles;"]},"metadata":{},"sourceType":"module"}